buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
        jcenter()
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

version = '1.0'
group = 'com.simibubi.worldshape'
archivesBaseName = 'worldshape'
java.toolchain.languageVersion = JavaLanguageVersion.of(8)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ')')

minecraft {
    mappings channel: 'official', version: '1.16.5'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            arg '-mixin.config=worldshape.mixins.json'
            property 'forge.logging.console.level', 'info'
            property 'fml.earlyprogresswindow', 'false'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods { worldshape { source sourceSets.main } }
        }

        server {
            workingDirectory project.file('run/server')
            arg '-mixin.config=worldshape.mixins.json'
            property 'forge.logging.console.level', 'info'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            mods { worldshape { source sourceSets.main } }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            property 'fml.earlyprogresswindow', 'false'
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            args '--mod', 'worldshape', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
            mods { worldshape { source sourceSets.main } }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }
mixin { add sourceSets.main, "worldshape.refmap.json" }

repositories {
    maven {
        name = "Progwml6 maven"
        url = "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        name = "tterrag maven"
        url = "https://maven.tterrag.com/"
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.6'
	
	runtimeOnly fg.deobf("mezz.jei:jei-1.16.5:7.7.1.116")
	runtimeOnly fg.deobf("com.jozufozu.flywheel:Flywheel:1.16-0.2.4.50")
    runtimeOnly fg.deobf("com.simibubi.create:Create:mc1.16.5_v0.3.2e+441")

    annotationProcessor 'org.spongepowered:mixin:0.8.2:processor'
}

jar {
    manifest {
        attributes([
            "Specification-Title": "worldshape",
            "Specification-Vendor": "worldshapesareus",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"worldshapesareus",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            "MixinConfigs": "worldshape.mixins.json"
        ])
    }
}

jar.finalizedBy('reobfJar') 

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
